#version 450
#extension GL_ARB_gpu_shader_int64 : enable
#extension GL_NV_shader_atomic_int64 : enable


layout (local_size_x = 4) in;

struct Result
{
    uint64_t minResult;
    uint64_t maxResult;
    uint64_t andResult;
    uint64_t orResult;
    uint64_t xorResult;
    int64_t  iMinResult;
    int64_t  iMaxResult;
    int64_t iAndResult;
    int64_t iOrResult;
    int64_t iXorResult;
    int64_t  addResult;
    int64_t  exchangeResult;
    int64_t  compSwapResult;
};

layout (std430, binding = 0) buffer BUFFER
{
     Result buf;
     uint64_t ldsResult1;
     int64_t ldsResult2;
};

layout (std430, binding = 1) buffer Data
{
    uint64_t inputData[4];
};

shared Result lds;

void main ()
{
    uint64_t data = inputData[gl_LocalInvocationIndex];
    atomicMin(buf.minResult, data);
    atomicMax(buf.maxResult, data);
    atomicAnd(buf.andResult, data);
    atomicOr (buf.orResult, data);
    atomicXor(buf.xorResult, data);

    int64_t iData = int64_t(data);
    atomicMin(buf.iMinResult, iData);
    atomicMax(buf.iMaxResult, iData);
    atomicAnd(buf.iAndResult, iData);
    atomicOr (buf.iOrResult, iData);
    atomicXor(buf.iXorResult, iData);

    atomicAdd(buf.addResult, iData);
    atomicExchange(buf.exchangeResult, iData);
    atomicCompSwap(buf.compSwapResult, 0x1234567890l, iData);

    atomicMin(lds.minResult, data);
    atomicMax(lds.maxResult, data);
    atomicAnd(lds.andResult, data);
    atomicOr (lds.orResult, data);
    atomicXor(lds.xorResult, data);
    atomicMin(lds.iMinResult, iData);
    atomicMax(lds.iMaxResult, iData);
    atomicAnd(lds.iAndResult, iData);
    atomicOr (lds.iOrResult, iData);
    atomicXor(lds.iXorResult, iData);
    atomicAdd(lds.addResult, iData);
    atomicExchange(lds.exchangeResult, iData);
    atomicCompSwap(lds.compSwapResult, 0x1234567890l, iData);

    barrier();

    ldsResult1 = lds.minResult + lds.maxResult + lds.andResult + lds.orResult + lds.xorResult;
    ldsResult2 = lds.iMinResult + lds.iMaxResult + lds.iAndResult + lds.iOrResult + lds.iXorResult +
                 lds.addResult + lds.exchangeResult + lds.compSwapResult;


}

